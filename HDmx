#!/usr/bin/env python

import liblo, sys,time
import select
import DmxPy

# create server, listening on port 3000
try:
    server = liblo.Server(3000)
except liblo.ServerError, err:
    print str(err)
    sys.exit()

try:
    dmx = DmxPy.DmxPy('/dev/ttyUSB0')
    print "ENTTEC DMX Usb pro linked at /dev/ttyUSB0"
except:
    print "Unable to open /dev/ttyUSB0"
    sys.exit()

def set(path, args):
    chan, val = args
    val = int(round(val))
    dmx.set(chan, val)
    dmx.render()
    if chan == 1:
        print "DMX '%d' at '%d'" % (chan, val)

def setnorender(path, args):
    chan, val = args
    val = int(round(val))
    dmx.set(chan, val)
    if chan == 1:
        print "DMX buffer '%d' at '%d'" % (chan, val)

def render():
    dmx.render()
    print "DMX render"

def blackout(path, args):
    dmx.setall(0)
    dmx.render()
    print "DMX all off"

def setall(path, args):
    if len(args) > 0:
        val = int(round(args[0]))
    else:
        val = 255
    dmx.setall(val)
    dmx.render()
    print "DMX all on"

# register methods
server.add_method("/dmx/set", 'ii', set)
server.add_method("/dmx/set", 'if', set)

server.add_method("/dmx/buffer", 'ii', setnorender)
server.add_method("/dmx/render", None, render)

server.add_method("/dmx/full", None, setall)
server.add_method("/dmx/setall", 'i', setall)

server.add_method("/dmx/off", None, blackout)
server.add_method("/dmx/blackout", None, blackout)

# stdin monitoring
read_list = [sys.stdin]

# loop and dispatch messages every 20ms
while True:
    # listen OSC
    server.recv(20)

    # listen STDIN
    '''if read_list:
		ready = select.select(read_list, [], [], 0.2)[0]
		if ready:
			for file in ready:
				line = file.readline()
				if not line: # EOF, remove file from input list
					read_list.remove(file)
				elif line.rstrip(): # optional: skipping empty lines
					command = line.rstrip().split(" ");
					print command

					if command[0] == "/dmx/set" and len(command) == 3:
						set(command[0], (int(command[1]), float(command[2])))

					elif command[0] == "/dmx/full":
						setall(command[0], None)

					elif command[0] == "/dmx/setall" and len(command) == 2:
						set(command[0], command[1])

					elif command[0] == "/dmx/off" or command[0] == "/dmx/blackout":
						blackout(command[0], None)'''
